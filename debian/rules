#!/usr/bin/make -f

export DH_VERBOSE=1
export SKIP_BUILD
export CARGO_HOME = $(CURDIR)/debian/cargo_home
export RUSTUP_HOME = $(CURDIR)/debian/rustup_home

%:
	dh $@

override_dh_auto_configure:
	# Install Rust via rustup if not available or if cargo version is too old
	if ! which cargo >/dev/null 2>&1 || ! cargo --version | grep -q "1\.[8-9][0-9]\|1\.[0-9][0-9][0-9]"; then \
		mkdir -p $(RUSTUP_HOME) $(CARGO_HOME); \
		curl https://sh.rustup.rs -sSf | \
		RUSTUP_HOME=$(RUSTUP_HOME) CARGO_HOME=$(CARGO_HOME) \
		sh -s -- -y --no-modify-path; \
	fi

override_dh_auto_build:
	if [ "$$SKIP_BUILD" = "1" ]; then \
		echo "Skipping cargo build as requested"; \
	else \
		PATH="$(CARGO_HOME)/bin:$(PATH)" HOME=/tmp cargo build --release; \
	fi

override_dh_auto_install:
	# Create required directories
	mkdir -p debian/hifiberry-audiocontrol/usr/bin
	mkdir -p debian/hifiberry-audiocontrol/usr/share/hifiberry-audiocontrol
	mkdir -p debian/hifiberry-audiocontrol/usr/share/hifiberry-audiocontrol/sample-web
	# Install main binary
	if [ -f target/release/acr ]; then \
		cp target/release/acr debian/hifiberry-audiocontrol/usr/bin/audiocontrol; \
		chmod +x debian/hifiberry-audiocontrol/usr/bin/audiocontrol; \
	fi
	# Install CLI tools if they exist
	for tool in acr_dumpcache acr_lms_client acr_send_update; do \
		if [ -f "target/release/$$tool" ]; then \
			new_tool=$$(echo "$$tool" | sed 's/acr_/audiocontrol_/'); \
			cp "target/release/$$tool" "debian/hifiberry-audiocontrol/usr/bin/$$new_tool"; \
			chmod +x "debian/hifiberry-audiocontrol/usr/bin/$$new_tool"; \
		fi; \
	done
	# Install config samples
	cp acr.json.sample debian/hifiberry-audiocontrol/usr/share/hifiberry-audiocontrol/
	# Install example app
	if [ -d example-app ]; then \
		cp -r example-app/* debian/hifiberry-audiocontrol/usr/share/hifiberry-audiocontrol/sample-web/; \
	fi

override_dh_auto_clean:
	dh_auto_clean
	rm -rf target/
	rm -rf $(CARGO_HOME)
	rm -rf $(RUSTUP_HOME)

override_dh_installsystemd:
	dh_installsystemd --name=audiocontrol --restart-after-upgrade

override_dh_strip:
	# Skip debug symbol extraction - don't create dbgsym package
	dh_strip --no-automatic-dbgsym
