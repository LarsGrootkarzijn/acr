#!/bin/bash
set -e

# Ensure the script runs with proper error handling (bash specific)
if [ -n "$BASH_VERSION" ]; then
    set -euo pipefail
fi

# Function to safely copy default config if none exists
setup_config() {
    # Check if we need to copy the sample config to the actual config file
    if [ ! -f /etc/acr/acr.json ]; then
        echo "No configuration file found, creating from sample..."
        if [ -f /usr/share/acr/acr.json.sample ]; then
            cp /usr/share/acr/acr.json.sample /etc/acr/acr.json
            # Set proper ownership
            chown acr:acr /etc/acr/acr.json
            chmod 644 /etc/acr/acr.json
            echo "Sample config copied to acr.json successfully"
        else
            echo "ERROR: No sample configuration file found"
            echo "Cannot continue without a valid configuration file"
            exit 1
        fi
    else
        echo "Existing configuration file found, keeping it."
    fi
}

# Function to create user, group and directory
setup_user_and_dirs() {
    # Create acr group if it doesn't exist
    if ! getent group acr > /dev/null; then
        echo "Creating acr group..."
        groupadd --system acr
    fi
    
    # Create acr user if it doesn't exist
    if ! getent passwd acr > /dev/null; then
        echo "Creating acr user..."
        useradd --system --gid acr --shell /usr/sbin/nologin --home-dir /etc/acr acr
    fi
    
    # Add acr user to the audio group for audio device access
    if getent group audio > /dev/null; then
        echo "Adding acr user to audio group..."
        usermod -a -G audio acr
    fi
    
    # Create directory structure
    echo "Setting up directory structure..."
    mkdir -p /etc/acr/cache/attributes
    mkdir -p /etc/acr/cache/images
    mkdir -p /var/acr
    
    # Fix permissions for all directories
    echo "Setting proper permissions..."
    chown -R acr:acr /etc/acr
    chmod 755 /etc/acr
    
    chown -R acr:acr /var/acr
    chmod 755 /var/acr
}

case "$1" in
    configure)
        setup_user_and_dirs
        setup_config
        # Enable and start the service
        if [ -d /run/systemd/system ]; then
            systemctl daemon-reload >/dev/null 2>&1 || true
            systemctl enable acr.service >/dev/null 2>&1 || true
            systemctl restart acr.service >/dev/null 2>&1 || true
        fi
        ;;
esac

exit 0
